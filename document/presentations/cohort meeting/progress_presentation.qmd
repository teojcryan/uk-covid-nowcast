---
title: "Nowcasting COVID-19 incidence in England"
#subtitle: "25th Jul cohort meeting"
date: "`r Sys.Date()`"
author: "Ryan Teo"
format: 
  revealjs:
    theme: default
    #smaller: true
---

```{r setup data, include=F}
library(here)
library(data.table)
library(ggplot2)
library(ggpubr)
dt <- readRDS(here("data", "cases", "national", "merged.rds"))

cases_cols <- c("cases", "cases_lfd_pcr", "cases_lfd", "cases_pcr")

delay_max <- 7
delay_max_grp <- paste0(">",as.character(delay_max))

# create binning for delays > delay_max
dt[, delay_grp := factor(ifelse(delay > delay_max, delay_max_grp, as.character(delay)),
                         levels = c(as.character(1:delay_max), delay_max_grp))]

dt <- dt[, lapply(.SD, sum, na.rm=T), 
         keyby = .(specimen_date, delay_grp),
         .SDcols = cases_cols]

# group by day of week
dt[, dow := factor(lubridate::wday(specimen_date, week_start = 1),
                   levels = 1:7)]
day_label <- as_labeller(c(`1` = "Monday",
                         `2` = "Tuesday",
                         `3` = "Wednesday",
                         `4` = "Thursday",
                         `5` = "Friday",
                         `6` = "Saturday",
                         `7` = "Sunday"))
```

## Background
- Incidence data suffers from reporting delays
    + reported data is regularly being updated
    + limits usefulness in real-time analysis
    
## Example
<!--- plot data --->

## Objective
- Perform a nowcast of the number of COVID-19 cases *by specimen date* in England
- 

## Success

## Issues


## Next steps
