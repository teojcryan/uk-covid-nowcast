---
#title: "Nowcasting COVID-19 incidence in England"
#subtitle: "Progress report"
date: "`r Sys.Date()`"
author: "Ryan Teo"
format: 
  revealjs:
    smaller: true
    scrollable: true
---

```{r setup, include=F}
knitr::opts_chunk$set(dev = 'png')
```
```{r, include=F}
library(here)
library(data.table)
library(ggplot2)
library(ggpubr)
dt <- readRDS(here("data", "cases", "national", "merged.rds"))

cases_cols <- c("cases", "cases_lfd_pcr", "cases_lfd", "cases_pcr")
# --------------

dt <- readRDS(here("data", "cases", "national", "merged.rds"))

dt <- dt[specimen_date < "2022-07-01"]
delay_max <- 7
delay_max_grp <- paste0(">",as.character(delay_max))

# create binning for delays > delay_max
dt[, delay_grp := factor(ifelse(delay > delay_max, 
                                delay_max_grp, 
                                as.character(delay)),
                         levels = c(as.character(1:delay_max), 
                                    delay_max_grp))]

dt <- dt[, lapply(.SD, sum, na.rm=T),
         keyby = .(specimen_date, delay_grp),
         .SDcols = cases_cols]

# group by day of week
dt[, dow := factor(lubridate::wday(specimen_date, week_start = 1),
                   levels = 1:7)]
day_label <- as_labeller(c(`1` = "Monday",
                         `2` = "Tuesday",
                         `3` = "Wednesday",
                         `4` = "Thursday",
                         `5` = "Friday",
                         `6` = "Saturday",
                         `7` = "Sunday"))
```

## Action items from previous meeting
1. Visualise extra-long delays
2. Analyse test-specific case data
<!--- 3. Pre-process data for updated reporting schedule --->

## Extra-long delays
```{r, fig.align='center'}
dt_raw <- readRDS(here("data", "cases", "national", "merged.rds"))

days_since <- data.table(specimen_date = unique(dt$specimen_date),
                         delay = as.numeric(max(dt$specimen_date) + 7 -unique(dt$specimen_date)))

p_delay_freq <- ggplot(dt_raw[cases != 0], aes(x=specimen_date, y=delay)) +
  geom_bin2d(bins = 71) +
  geom_line(data = days_since, col ='red', lwd=.5) +
  scale_fill_continuous("Count", type = "viridis", direction=-1) +
  theme_bw() + 
  xlab("Specimen Date") +
  ylab("Delay (days)") +
  theme(legend.position='bottom')

p_update_freq <- dt_raw[cases != 0
       ][, .N, by = report_date
         ][, ggplot(.SD, aes(x=report_date, y=N)) + 
             geom_bar(stat = 'identity') +
             geom_vline(xintercept = as.Date("2021-12-03"), col='red', lty=2) +
             geom_vline(xintercept = as.Date("2022-01-31"), col='red', lty=2) +
             ylab("Number of updates") + xlab("Report date") + 
             theme_bw()]

ggarrange(p_delay_freq, p_update_freq)
```

## Extra-long delays
- Number of updates per report date increased quite steadily till 03/12/21
    + Unsure about why this happened
- Large number of updates on 31/1/22
    + [Updating of case definition](https://coronavirus.data.gov.uk/details/whats-new/record/beb802ac-1ed2-47ac-b314-69a5c3f712b5) to include multiple infection episodes
    + Cases by specimen date revised back to the beginning of the pandemic
    
- Conclusion: might be reasonable to assume a maximum delay of ~50 days?

## Distribution of cases by delay

```{r}
p_delay_dist <- dt[, prop := cases/sum(cases),
   by=specimen_date
][, .(mean = mean(prop, na.rm=T),
      u = quantile(prop, na.rm=T, prob = .975),
      l = quantile(prop, na.rm=T, prob = .025)),
  by = delay_grp
][, ggplot(.SD, aes(x=delay_grp, y=mean, ymin=l, ymax=u)) +
    geom_errorbar(width = .5) + 
    geom_point() +
    xlab("delay d (days)") + ylab(expression("P(delay = d)")) + 
    theme_bw()]

p_delay_cdist <- dt[, prop := cases/sum(cases), by=specimen_date
   ][, prop := cumsum(prop), by=specimen_date
     ][, .(mean = mean(prop, na.rm=T),
           u = quantile(prop, na.rm=T, prob = .975),
           l = quantile(prop, na.rm=T, prob = .025)),
       by = delay_grp
       ][, ggplot(.SD, aes(x=delay_grp, y=mean, ymin=l, ymax=u)) +
           geom_errorbar(width = .5) + 
           geom_point() +
           xlab("delay d (days)") + ylab(expression("P(delay <= d)")) + 
           theme_bw()]

ggarrange(p_delay_dist, p_delay_cdist)
```

## Day of week
*Sanity check*

```{r}
dt[, prop := cases/sum(cases),
   by= .(specimen_date, dow)
][, .(mean = mean(prop, na.rm=T),
      u = quantile(prop, na.rm=T, prob = .975),
      l = quantile(prop, na.rm=T, prob = .025)),
  by = .(delay_grp, dow)
][, ggplot(.SD, aes(x=delay_grp, y=mean, ymin=l, ymax=u)) +
    geom_errorbar(width = .5) + 
    geom_point() +
    facet_wrap(~dow, nrow=2, label=day_label) +
    xlab("delay d (days)") + ylab(expression("P(delay = d)")) + 
    theme_bw()]
```

## Test-specific case data

`New cases by specimen date` is the sum of three separate data sources:

1.  LFD confirmed by PCR
    -   Identified by LFD and confirmed by PCR within 3 days
    -   Date reflects LFD test date  
2.  LFD only
    -   Identified by LFD and not confirmed by PCR within 3 days
    -   If subsequent PCR is negative, cases will be removed
3.  PCR only
    -   Identified by PCR excluding those identified by LFD within 3 days

## Test type
```{r}
dt[, lapply(.SD, sum, na.rm=T),
   keyby = .(specimen_date, delay_grp),
   .SDcols = cases_cols
   ][, melt(.SD, 
         id.vars = c('specimen_date', 'delay_grp'),
         measure.vars = cases_cols[2:4],
         variable.name = "cases")
     ][, prop := value/sum(value, na.rm=T),
       by = specimen_date
       ][, .(mean = mean(prop, na.rm=T),
      u = quantile(prop, na.rm=T, prob = .975),
      l = quantile(prop, na.rm=T, prob = .025)),
      by = .(delay_grp, cases)
      ][, ggplot(.SD, aes(x=delay_grp, y=mean, ymin=l, ymax=u)) +
          geom_errorbar(width = .5, alpha = .5,position = position_dodge(width = 0.50)) + 
          geom_point(position = position_dodge(width = 0.50)) + 
          facet_wrap(~cases,
                     label = as_labeller(c(`cases_lfd_pcr`="LFD-PCR", 
                                           `cases_lfd`="LFD Only",
                                           `cases_pcr`="PCR Only"))) + 
          xlab("Delay (days)") + ylab(expression("P(delay = d)")) + 
          theme_bw() + 
          theme(legend.position = 'bottom')]
```

## Test type
- Might be able to nowcast LFD-PCR and PCR only streams separately
    + updates for these streams are not all positive, occasionally some case definition revisions lead to large negative updates
    + e.g. [Revision to episode-based case definition](https://coronavirus.data.gov.uk/details/whats-new/record/8055ae4e-ba2a-450a-bff8-42e9e4d1575b) on 1/2/22 led to large drops in PCR only cases for a few dates (7-10/1/22) in the thousands
- Need a different model for LFD only stream 

## Next steps
- Try out `epinowcast`
- Explore further stratification by location and age
- Create counterfactual datasets with alternative reporting schedule (weekdaily vs weekly)